apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'

android {
    compileSdkVersion 26
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "uwanttolearn.astro"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding{
        enabled true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.0.0-alpha1'
    compile 'com.android.support:design:26.0.0-alpha1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    // Retrofit 2 for API call's
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    // JSON Converter. Which I used with Retrofit.
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    // Rx Java 2. I used for callback in adapters + with retrofit.
    compile 'io.reactivex.rxjava2:rxjava:2.0.2'
    // Rx Android mostly used for AndroidSchedulers.mainThread()
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // Retrofit 2 work with Rx Java2. Only we need to add below adapter to make a connection
    // between these two libs
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    // This is very useful to show all the response from the API to Logcat.
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.1'


    kapt 'com.android.databinding:compiler:2.3.1'


    // Dagger 2
    compile 'com.google.dagger:dagger:2.11'

    // Dagger 2 with Kotlin
    kapt 'com.google.dagger:dagger-compiler:2.11'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:1.1.2"
    compile 'com.jakewharton.timber:timber:4.5.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.github.bumptech.glide:glide:3.8.0'
    compile 'com.android.support:cardview-v7:26.0.0-alpha1'
}
kapt {
    generateStubs = true
}